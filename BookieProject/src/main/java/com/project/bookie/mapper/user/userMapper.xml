<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.bookie.mapper.user.UserMapper">
	<resultMap type="user" id="u">
		<id property="id" column="id"/>
		<result property="uEmail" column="u_email"/>
		<result property="uPwd" column="u_pwd"/>
		<result property="phone" column="phone"/>
		<result property="nickname" column="nickname"/>
		<result property="regDate" column="reg_date"/>
		<collection property="interestList" column="id" select="getInterestByUserId"></collection>
	</resultMap>
	
	<select id="getAllUser" resultType="user">
		select * from user
	</select>
	<!-- 회원 정보 조회 -->
	<select id="getUserById" resultType="user">
		select * from user where
		id=#{id}
	</select>
	
	<select id="getUserIdByEmail" parameterType="String" resultType="long">
		select user.id from user where
		u_email=#{uEmail}
	</select>
	
	<select id="getUserNicknameByEmail" parameterType="String" resultType="String">
		select user.nickname from user where u_email=#{uEmail}
	</select>
	<select id="getInterestByUserId" resultType="interest">
		select i.genre_id as genreId, g.name as genreName from genre g join interest i on g.id = i.genre_id where i.user_id = #{id}
	</select>
	<select id="getUserPwd" resultType="String">
		select u_pwd from user where u_email=#{uEmail}
	</select>
	<!-- 이메일로 비밀번호 찾기(일치하는 이메일 존재시 이메일 인증 필요 - 이메일로 비밀번호 전송 or 이메일 인증 성공시 페이지에서 
		비밀번호 재설정 - 차후에 비밀번호 재설정 -->
	<select id="getUserByEmail" resultMap="u">  <!-- result type으로 변경 -->
		select * from user where u_email=#{uEmail}
	</select>
	<!-- 이메일 중복 검사!!! -->
	<select id="countUserByEmail" resultType="int">
		select count(*) from
		user where u_email=#{uEmail}
	</select>
	<!-- 닉네임 중복 검사!!! -->
	<select id="countUserByNickname" resultType="int">
		select count(*) from
		user where nickname=#{nickname}
	</select>
	<!-- 휴대폰번호로 이메일 혹은 비밀번호 찾기(비밀번호 재설정 기능 필요) -->
	<select id="getUserByPhone" resultType="user"> <!-- result type으로 변경 -->
		select * from user where
		phone=#{phone}
	</select>
	<!-- 전체 관심 장르 가져오기 -->
	<select id="getAllInterestList" resultType="interest">
		select id as genreId, name as genreName from genre;
	</select>
	<!-- 회원 정보 등록 -->
	<insert id="insertUser" parameterType="user">
		insert into user (u_email,
		u_pwd, nickname, phone)
		values
		(#{uEmail}, #{uPwd}, #{nickname},
		#{phone})
	</insert>
	<insert id="insertInterest" parameterType="interest">
		insert into interest (user_id, genre_id) values
		(#{userId},#{genreId})
	</insert>

	<!-- 비밀번호 재설정 기능 : 비밀번호는 별도의 테이블로 관리하기 때문에 다른 mapper에 작성될 수 있음 -->

	<!-- 수정 : 이메일은 read-only로, id는 input type="hidden"으로 값 입력 -->
	<!-- 휴대폰 번호 변경(휴대폰 인증 과정 재수행 필요) -->
	<update id="updateUserWithPhone" parameterType="user">
		update user set
		phone=#{phone} where id=#{id}
	</update>
	<!-- 닉네임 변경 기능 구현시 사용(버튼 필요) -->
	<update id="updateUserWithNickName" parameterType="user">
		update user
		set nickname=#{nickname} where id=#{id}
	</update>
	<!-- 마이페이지 정보 수정 -->
	<update id="updateMypage">
		update user set nickname=#{nickname}, phone=#{phone} where id=#{uId}
	</update>
	<!-- 회원 id에 따른 interest의 id가져오기 -->
	<select id="getInterestIdByUserId">
		select id from interest where user_id = #{id}
	</select>
	<!-- 마이페이지 정보 수정 - 관심 장르 체크박스 수정(where문의 id는 interest 테이블의 id -->
	<delete id="deleteInterest">
		delete from interest where user_id=#{userId}
	</delete>
	<insert id="insertMypageInterest" parameterType="interest">
		insert interest(user_id, genre_id) values(#{userId}, #{genreId})
	</insert>
	<!-- 이메일 인증 확인 -->
	<update id="updateUserWithId" parameterType="int">
		update user
		set certification=1 where id=#{uId}
	</update>
	<!-- 비밀번호 재설정 -->
	<update id="updatePwdById">
		update user
		set u_pwd=#{pwd} where id=#{id}
	</update>
	<!-- 회원 정보 삭제 -->
	<delete id="deleteUser">
		delete from user where id=#{id}
	</delete>
</mapper>